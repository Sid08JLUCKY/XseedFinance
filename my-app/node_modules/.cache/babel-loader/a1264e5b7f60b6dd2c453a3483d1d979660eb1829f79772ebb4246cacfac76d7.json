{"ast":null,"code":"import _defineProperty from\"/Users/siddhantjain/Desktop/XseedFinance/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/siddhantjain/Desktop/XseedFinance/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/siddhantjain/Desktop/XseedFinance/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"../css/sipCalculator.css\";import InputRangeLeft,{InputRangeRight}from\"../Components/formInput\";import NavBar from\"../Components/navbar\";import DoughnutChart from\"../Components/doughnut\";import Footer from\"../Components/footer\";import BlackStrip from\"../Components/blackStrip\";import TableData from\"../Components/tableData\";import FDInfo from\"./fdCalInfo\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FDCal(){var _React$useState=React.useState({totalInvestment:5000,interestRate:1,timePeriod:1}),_React$useState2=_slicedToArray(_React$useState,2),stats=_React$useState2[0],setStats=_React$useState2[1];//   const rate = stats.interestRate / 100;\n//   const totalInvestment = stats.totalInvestment * stats.timePeriod * 12;\nvar returnAmt=stats.totalInvestment*stats.interestRate*stats.timePeriod/100;// data for doughnut chart\nvar data={labels:[\"Total Investment\",\"Total Returns\"],datasets:[{label:\"FD Calculation\",data:[stats.totalInvestment,returnAmt],borderColor:[\"black\"],backgroundColor:[\"#91BCE5\",\"#0E2A40\"],pointBackgroundColor:\"red\"}]};// options for doughnut chart\nvar options={plugins:{title:{display:true,text:\"FD Calculator\",color:\"black\",font:{size:34},padding:{top:30,bottom:30},responsive:true,animation:{animateScale:true}}}};function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;return setStats(function(prevValue){return _objectSpread(_objectSpread({},prevValue),{},_defineProperty({},name,value));});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BlackStrip,{bgcolor:\"#1e1b1b\",height:\"2.2em\"}),/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{class:\"sipContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"heading\",children:[/*#__PURE__*/_jsx(\"h4\",{class:\"calHeading\",children:\"Fixed Deposit Calculator\"}),/*#__PURE__*/_jsx(\"h6\",{class:\"calTagline\",children:\"Find your maturity amount easily !!\"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row stats\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"col-sm-12 col-md-5 align-self-center\",children:[/*#__PURE__*/_jsx(InputRangeLeft,{label:\"Monthly Investment\",id:\"customRange1\",name:\"totalInvestment\",unit:\"\\u20B9\",rangeOutput:stats.totalInvestment,onChange:handleChange,min:5000,max:10000000,step:30000}),/*#__PURE__*/_jsx(InputRangeRight,{label:\"Expected return rate (p.a.)\",id:\"customRange2\",name:\"interestRate\",unit:\"%\",rangeOutput:stats.interestRate,onChange:handleChange,min:1,max:15,step:0.5}),/*#__PURE__*/_jsx(InputRangeRight,{label:\"Time Period\",id:\"customRange3\",name:\"timePeriod\",unit:\"Yr\",rangeOutput:stats.timePeriod,onChange:handleChange,min:1,max:30,step:1}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TableData,{title:\"Investment Amount\",unit:\"\\u20B9\",data:stats.totalInvestment}),/*#__PURE__*/_jsx(TableData,{title:\"Est. Returns\",unit:\"\\u20B9\",data:returnAmt}),/*#__PURE__*/_jsx(TableData,{title:\"Total Value\",unit:\"\\u20B9\",data:Number(stats.totalInvestment)+returnAmt})]}),/*#__PURE__*/_jsx(\"div\",{class:\"col-sm-12 col-md-6\",id:\"pie\",children:/*#__PURE__*/_jsx(DoughnutChart,{data:data,options:options})})]})]}),/*#__PURE__*/_jsx(FDInfo,{}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"names":["React","InputRangeLeft","InputRangeRight","NavBar","DoughnutChart","Footer","BlackStrip","TableData","FDInfo","jsx","_jsx","jsxs","_jsxs","FDCal","_React$useState","useState","totalInvestment","interestRate","timePeriod","_React$useState2","_slicedToArray","stats","setStats","returnAmt","data","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","options","plugins","title","display","text","color","font","size","padding","top","bottom","responsive","animation","animateScale","handleChange","event","_event$target","target","name","value","prevValue","_objectSpread","_defineProperty","children","bgcolor","height","class","id","unit","rangeOutput","onChange","min","max","step","Number"],"sources":["/Users/siddhantjain/Desktop/XseedFinance/my-app/src/Non-Components/fd calculator.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../css/sipCalculator.css\";\nimport InputRangeLeft, { InputRangeRight } from \"../Components/formInput\";\nimport NavBar from \"../Components/navbar\";\nimport DoughnutChart from \"../Components/doughnut\";\nimport Footer from \"../Components/footer\";\nimport BlackStrip from \"../Components/blackStrip\";\nimport TableData from \"../Components/tableData\";\nimport FDInfo from \"./fdCalInfo\";\n\nexport default function FDCal() {\n  const [stats, setStats] = React.useState({\n    totalInvestment: 5000,\n    interestRate: 1,\n    timePeriod: 1,\n  });\n  //   const rate = stats.interestRate / 100;\n  //   const totalInvestment = stats.totalInvestment * stats.timePeriod * 12;\n  var returnAmt =\n    (stats.totalInvestment * stats.interestRate * stats.timePeriod) / 100;\n  // data for doughnut chart\n  const data = {\n    labels: [\"Total Investment\", \"Total Returns\"],\n    datasets: [\n      {\n        label: \"FD Calculation\",\n        data: [stats.totalInvestment, returnAmt],\n        borderColor: [\"black\"],\n        backgroundColor: [\"#91BCE5\", \"#0E2A40\"],\n        pointBackgroundColor: \"red\",\n      },\n    ],\n  };\n  // options for doughnut chart\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"FD Calculator\",\n        color: \"black\",\n        font: {\n          size: 34,\n        },\n        padding: {\n          top: 30,\n          bottom: 30,\n        },\n        responsive: true,\n        animation: {\n          animateScale: true,\n        },\n      },\n    },\n  };\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    return setStats((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n  return (\n    <div>\n      <BlackStrip bgcolor=\"#1e1b1b\" height=\"2.2em\" />\n      <NavBar />\n\n      <div class=\"sipContainer\">\n        <div class=\"heading\">\n          <h4 class=\"calHeading\">Fixed Deposit Calculator</h4>\n          <h6 class=\"calTagline\">Find your maturity amount easily !!</h6>\n        </div>\n        <div class=\"row stats\">\n          <div class=\"col-sm-12 col-md-5 align-self-center\">\n            <InputRangeLeft\n              label=\"Monthly Investment\"\n              id=\"customRange1\"\n              name=\"totalInvestment\"\n              unit=\"₹\"\n              rangeOutput={stats.totalInvestment}\n              onChange={handleChange}\n              min={5000}\n              max={10000000}\n              step={30000}\n            />\n\n            <InputRangeRight\n              label=\"Expected return rate (p.a.)\"\n              id=\"customRange2\"\n              name=\"interestRate\"\n              unit=\"%\"\n              rangeOutput={stats.interestRate}\n              onChange={handleChange}\n              min={1}\n              max={15}\n              step={0.5}\n            />\n\n            <InputRangeRight\n              label=\"Time Period\"\n              id=\"customRange3\"\n              name=\"timePeriod\"\n              unit=\"Yr\"\n              rangeOutput={stats.timePeriod}\n              onChange={handleChange}\n              min={1}\n              max={30}\n              step={1}\n            />\n            <br />\n            <TableData\n              title=\"Investment Amount\"\n              unit=\"₹\"\n              data={stats.totalInvestment}\n            />\n            <TableData title=\"Est. Returns\" unit=\"₹\" data={returnAmt} />\n            <TableData\n              title=\"Total Value\"\n              unit=\"₹\"\n              data={Number(stats.totalInvestment)+returnAmt}\n            />\n          </div>\n\n          {/* for chart--> */}\n          <div class=\"col-sm-12 col-md-6\" id=\"pie\">\n            <DoughnutChart data={data} options={options} />\n          </div>\n        </div>\n      </div>\n      <FDInfo />\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}